#!/bin/sh
set -e # exit on any error
ZLIB_LOCATION=$_CONDOR_SCRATCH_DIR/zlib
if test -d /prereq/zlib-1.2.3; then
    ZLIB_LOCATION=/prereq/zlib-1.2.3
else
    ZLIB_LOCATION=$_CONDOR_SCRATCH_DIR/zlib
fi
LOGNAME=$USER
X509_CERT_DIR=$GLOBUS_LOCATION/share/certificates
export LOGNAME X509_CERT_DIR
(
if test -n "${_NMI_PREREQ_openssl_0_9_8k_shared_ROOT}"; then
    PKG_CONFIG_PATH="${_NMI_PREREQ_openssl_0_9_8k_shared_ROOT}/lib/pkgconfig"
    OPENSSL_CFLAGS="-I${_NMI_PREREQ_openssl_0_9_8k_shared_ROOT}/include"
    OPENSSL_INCLUDES="-I${_NMI_PREREQ_openssl_0_9_8k_shared_ROOT}/include"
    OPENSSL_LDFLAGS="-L${_NMI_PREREQ_openssl_0_9_8k_shared_ROOT}/lib"
    OPENSSL_LIBS="-lssl -lcrypto"
    export PKG_CONFIG_PATH
    export OPENSSL_CFLAGS OPENSSL_INCLUDES OPENSSL_LDFLAGS OPENSSL_LIBS
fi
if test -n "${LD_LIBRARY_PATH}" -a -z "${LIBPATH}"; then
    LIBPATH=$LD_LIBRARY_PATH
    export LIBPATH
fi
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildZLib"; then
    if test ! -d $ZLIB_LOCATION; then
        echo Building zlib-1.2.3...
        cd zlib-1.2.3
        ./configure --prefix=$ZLIB_LOCATION
        make
        make install
        cd ..
    fi
fi
BuildGT()
{
    export GLOBUS_LOCATION
    echo ==================================================
    echo Environment variables:
    env
    echo ==================================================
    echo Installing $installer to $GLOBUS_LOCATION
    tar xfz $installer
    mv gt*-installer $installerdir
    cd $installerdir
    ./configure --prefix=$GLOBUS_LOCATION --with-buildopts="-verbose" \
                --with-gsiopensshargs="--with-zlib=$ZLIB_LOCATION"
    make globus_usage gsi-openssh install
    cd ..
    rm -rf $installerdir # limit scratch space use
    echo ==================================================
    echo Installing autotools to $GLOBUS_LOCATION
    cd autotools
    ./install-autotools $GLOBUS_LOCATION
    cd ..
}
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildGT4"; then
    installer="gt4.0.8-all-source-installer.tar.gz"
    GLOBUS_LOCATION="$_CONDOR_SCRATCH_DIR/gt4"
    installerdir="gt4-src"
    BuildGT
fi
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildGT5"; then
    installer="gt5.0.2rc2-all-source-installer.tar.gz"
    GLOBUS_LOCATION="$_CONDOR_SCRATCH_DIR/gt5"
    installerdir="gt5-src"
    BuildGT
fi
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildGTNightly"; then
    installer="nightly.tar.gz"
    GLOBUS_LOCATION="$_CONDOR_SCRATCH_DIR/gt-nightly"
    installerdir="gt-nightly-src"
    BuildGT
fi
BuildGSISSHTrunk()
{
  export GLOBUS_LOCATION
  . $GLOBUS_LOCATION/etc/globus-user-env.sh
  echo ==================================================
  echo Environment variables:
  env
  echo ==================================================
  GLOBUS_FLAVOR_NAME=`gpt-query -name=gsi_openssh | perl -n -e 'if (/gsi_openssh-(.*)-pgm/){print "$1\n";}'|head -1`
  export GLOBUS_FLAVOR_NAME
  echo GPT GLOBUS_FLAVOR_NAME is $GLOBUS_FLAVOR_NAME.
  echo ==================================================
  cd gssapi-openssh
  cp -r openssh openssh.build
  cd openssh.build
  echo Building GSI-OpenSSH from CVS trunk to $GLOBUS_LOCATION
  autoreconf
  ./configure --prefix=$GLOBUS_LOCATION \
    --with-globus-flavor=$GLOBUS_FLAVOR_NAME \
    --with-zlib=$ZLIB_LOCATION \
    --with-privsep-user=$USER --with-privsep-path=$GLOBUS_LOCATION/var/empty
  make install-nokeys # nonroot
  cd ..
  rm -rf openssh.build
  cd ..
}
BuildGSISSHGPT()
{
  export GLOBUS_LOCATION
  . $GLOBUS_LOCATION/etc/globus-user-env.sh
  echo ==================================================
  echo Environment variables:
  env
  echo ==================================================
  GLOBUS_FLAVOR_NAME=`gpt-query -name=gsi_openssh | perl -n -e 'if (/gsi_openssh-(.*)-pgm/){print "$1\n";}'|head -1`
  export GLOBUS_FLAVOR_NAME
  echo GPT GLOBUS_FLAVOR_NAME is $GLOBUS_FLAVOR_NAME.
  echo ==================================================
  cp -r openssh.gpt openssh.build
  cd openssh.build
    echo Building GSI-OpenSSH GPT package from CVS to $GLOBUS_LOCATION
    rm -f gsi_openssh-*.tar.gz
    ./make_gpt_dist
    gpt-build -force -verbose gsi_openssh-*.tar.gz $GLOBUS_FLAVOR_NAME \
      GSI_OPENSSH_GPTMACRO="--with-zlib=$ZLIB_LOCATION"
  cd ..
  rm -rf openssh.build
}
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildGSISSHTrunkGT4"; then
    GLOBUS_LOCATION=$_CONDOR_SCRATCH_DIR/gt4
    BuildGSISSHTrunk
fi
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildGSISSHTrunkGT5"; then
    GLOBUS_LOCATION=$_CONDOR_SCRATCH_DIR/gt5
    BuildGSISSHTrunk
fi
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildGSISSHTrunkGTNightly"; then
    GLOBUS_LOCATION=$_CONDOR_SCRATCH_DIR/gt-nightly
    BuildGSISSHTrunk
fi
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildGSISSHGPTGT4"; then
    GLOBUS_LOCATION=$_CONDOR_SCRATCH_DIR/gt4
    BuildGSISSHGPT
fi
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildGSISSHGPTGT5"; then
    GLOBUS_LOCATION=$_CONDOR_SCRATCH_DIR/gt5
    BuildGSISSHGPT
fi
if test -z "$_NMI_TASKNAME" -o "x$_NMI_TASKNAME" = "xBuildGSISSHGPTGTNightly"; then
    GLOBUS_LOCATION=$_CONDOR_SCRATCH_DIR/gt-nightly
    BuildGSISSHGPT
fi
) 2>&1 # we want stdout & stderr mixed in the output file
