#!/bin/sh
set -e # exit on any error
GLOBUS_LOCATION=$_CONDOR_SCRATCH_DIR/globus
ZLIB_LOCATION=$_CONDOR_SCRATCH_DIR/zlib
LOGNAME=$USER
X509_CERT_DIR=$GLOBUS_LOCATION/share/certificates
export GLOBUS_LOCATION LOGNAME X509_CERT_DIR
(
echo ==================================================
echo Environment variables:
env
echo ==================================================
echo Directory contents:
ls -Rl
echo ==================================================
if test -d /prereq/zlib-1.2.3; then
  ZLIB_LOCATION=/prereq/zlib-1.2.3
  echo zlib found in $ZLIB_LOCATION
else
  echo Building zlib-1.2.3...
  cd zlib-1.2.3
  ./configure --prefix=$ZLIB_LOCATION
  make
  make install
  cd ..
fi
echo ==================================================
echo Installing Globus Toolkit...
tar xfj gt*-all-source-installer.tar.bz2
cd gt*-installer
./configure --prefix=$GLOBUS_LOCATION --with-buildopts="-verbose" \
            --with-gsiopensshargs="--with-zlib=$ZLIB_LOCATION"
make gsi-openssh install
. $GLOBUS_LOCATION/etc/globus-user-env.sh
cd ..
echo ==================================================
GLOBUS_FLAVOR_NAME=`gpt-query -name=gsi_openssh | perl -n -e 'if (/gsi_openssh-(.*)-pgm/){print "$1\n";}'|head -1`
export GLOBUS_FLAVOR_NAME
echo GPT GLOBUS_FLAVOR_NAME is $GLOBUS_FLAVOR_NAME.  Installing globus_core.
gpt-build -nosrc $GLOBUS_FLAVOR_NAME
if test -f gsi_openssh_bundle-*.tar.gz; then
  echo ==================================================
  echo Building GSI-OpenSSH GPT bundle...
  gpt-build -force -verbose gsi_openssh_bundle-*.tar.gz $GLOBUS_FLAVOR_NAME \
    GSI_OPENSSH_GPTMACRO="--with-zlib=$ZLIB_LOCATION"
fi
if test -d openssh; then
  echo ==================================================
  echo Installing autotools...
  cd autotools
  ./install-autotools $GLOBUS_LOCATION
  cd ..
  echo ==================================================
  cd gssapi-openssh/openssh
  if test -f make_gpt_dist; then
    echo Building GSI-OpenSSH GPT package from CVS...
    ./make_gpt_dist
    gpt-build -force -verbose gsi_openssh-*.tar.gz $GLOBUS_FLAVOR_NAME \
      GSI_OPENSSH_GPTMACRO="--with-zlib=$ZLIB_LOCATION"
  else
    echo Building GSI-OpenSSH from CVS trunk...
    autoreconf
    ./configure --prefix=$GLOBUS_LOCATION \
      --with-globus-flavor=$GLOBUS_FLAVOR_NAME \
      --with-zlib=$ZLIB_LOCATION \
      --with-privsep-user=$USER --with-privsep-path=$GLOBUS_LOCATION/var/empty
    make install
  fi
  cd ../..
fi
if test -f nightly.tar.gz; then
    echo ==================================================
    echo Installing GT CVS Trunk...
    GLOBUS_LOCATION=$_CONDOR_SCRATCH_DIR/globus-trunk
    tar xfz nightly.tar.gz
    cd gtTRUNK-all-source-installer
    ./configure --prefix=$GLOBUS_LOCATION --with-buildopts="-verbose" \
                --with-gsiopensshargs="--with-zlib=$ZLIB_LOCATION"
    make gsi-openssh install
    . $GLOBUS_LOCATION/etc/globus-user-env.sh
    cd ..
    echo ==================================================
    GLOBUS_FLAVOR_NAME=`gpt-query -name=gsi_openssh | perl -n -e 'if (/gsi_openssh-(.*)-pgm/){print "$1\n";}'|head -1`
    export GLOBUS_FLAVOR_NAME
    echo GPT GLOBUS_FLAVOR_NAME is $GLOBUS_FLAVOR_NAME.
    if test -f gsi_openssh_bundle-*.tar.gz; then
        echo ==================================================
        echo Building GSI-OpenSSH GPT bundle...
        gpt-build -force -verbose gsi_openssh_bundle-*.tar.gz $GLOBUS_FLAVOR_NAME \
            GSI_OPENSSH_GPTMACRO="--with-zlib=$ZLIB_LOCATION"
    fi
    if test -d openssh; then
        echo ==================================================
        echo Installing autotools...
        cd autotools
        ./install-autotools $GLOBUS_LOCATION
        cd ..
        echo ==================================================
        cd gssapi-openssh/openssh
        if test -f make_gpt_dist; then
            echo Building GSI-OpenSSH GPT package from CVS...
            gpt-build -force -verbose gsi_openssh-*.tar.gz $GLOBUS_FLAVOR_NAME \
                GSI_OPENSSH_GPTMACRO="--with-zlib=$ZLIB_LOCATION"
        else
            echo Building GSI-OpenSSH from CVS trunk...
            autoreconf
            ./configure --prefix=$GLOBUS_LOCATION \
                --with-globus-flavor=$GLOBUS_FLAVOR_NAME \
                --with-zlib=$ZLIB_LOCATION \
                --with-privsep-user=$USER --with-privsep-path=$GLOBUS_LOCATION/var/empty
            make clean
            make install
        fi
    fi
fi
) 2>&1 # we want stdout & stderr mixed in the output file
