Notes:
======

1) Generating reports for longer periods of time might require increasing
   Java heap size. The GLOBUS_OPTIONS env. variable can be used to specify
   larger heap size, for example:
   
   # export GLOBUS_OPTIONS=-Xmx512m




Generating container reports & graphs:
======================================

1. Generate the report & save results in container.xml file:

   # $G_L/bin/jwscore-container-report <date> > $G_L/container.xml

2. Using the container.xml generate instructions and data files for gnuplot:

   # ant -f etc/globus_usage_reports/jwscore/reports.xml gnuplot-container \
     -Din.xml=$G_L/container.xml
   
   This will generate the following files:
    o 'uniqueservices.gnuplot' & 'uniqueservices.data'
    o 'containers.gnuplot' & 'containers.data'
    o 'services.gnuplot' & 'services.data'

   Note:
    -Dcontainer.xml property must always be an absoulte path.

3. Run gnuplot on each of the generated .gnuplot file:

   # gnuplot uniqueservices.gnuplot containers.gnuplot services.gnuplot

   This will create 'uniqueservices.png', 'containers.png', and 
   'services.png' files.


Generating container up time report & graph:
============================================

Description:

This reports calculates the time difference between a stop and a start event
of the same unique container (unique container = ip + container id).

Steps:

1. Generate the report & save results in uptime.xml file:

   # $G_L/bin/jwscore-container-up-report <date> > $G_L/uptime.xml

   Use 'jwscore-container-up-2-report' for newer more reliable way of computing
   the uptimes)

2. Using the uptime.xml generate instructions and data files for gnuplot:

   # ant -f etc/globus_usage_reports/jwscore/reports.xml gnuplot-uptime \
     -Din.xml=$G_L/uptime.xml

   This will generate 'uptime.gnuplot' & 'uptime.data' files.

3. Run gnuplot on the generated .gnuplot file:

   # gnuplot uptime.gnuplot

   This will create 'uptime.png' file.



Generating container long up time report & graph:
=================================================

Description:

This reports computes the time difference between a stop and a start event
of the same unique container (unique container = ip + container id) and then
reports the longest container uptime on a given ip address.

Steps:

1. Generate the report & save results in uptime.xml file:

   # $G_L/bin/jwscore-container-long-up-report <date> > $G_L/longuptime.xml

   Use 'jwscore-container-long-up-2-report' for newer more reliable way of
   computing the uptimes)

2. Using the longuptime.xml generate instructions and data files for gnuplot:

   # ant -f etc/globus_usage_reports/jwscore/reports.xml gnuplot-long-uptime \
     -Din.xml=$G_L/longuptime.xml

   This will generate 'longuptime.gnuplot' & 'longuptime.data' files.

3. Run gnuplot on the generated .gnuplot file:

   # gnuplot longuptime.gnuplot

   This will create 'longuptime.png' file.



Generating service report & graph:
==================================

1. Generate the report & save results in service.xml file:

   # $G_L/bin/jwscore-service-report <date> > $G_L/service.xml

2. Using the service.xml generate instructions and data files for gnuplot:

   # ant -f etc/globus_usage_reports/jwscore/reports.xml gnuplot-service \
     -Din.xml=$G_L/service.xml

   This will generate 'service.gnuplot' & 'service.data' files.

3. Run gnuplot on the generated .gnuplot file:

   # gnuplot service.gnuplot

   This will create 'service.png' file.



Generating unmatched event report & graph:
==========================================

Description:

This tries to find unmatched stop or start events (start without a stop or
stop without a start) within a given time period. Of course, some unmatched
events might be false-positives as the missing events might be outside of the
specified time period.
The graph shows when the unmatched start or stop event was received.

Steps:

1. Generate the report & save results in event.xml file:

   # $G_L/bin/jwscore-container-event-report <date> > $G_L/event.xml

2. Using the event.xml generate instructions and data files for gnuplot:

   # ant -f etc/globus_usage_reports/jwscore/reports.xml gnuplot-event \
     -Din.xml=$G_L/event.xml

   This will generate 'event.gnuplot' & 'event.data' files.

3. Run gnuplot on the generated .gnuplot file:

   # gnuplot event.gnuplot

   This will create 'event.png' file.
