#! /bin/sh

rm -rf "$WORKSPACE/package-output"
mkdir "$WORKSPACE/package-output"

cd "$WORKSPACE/packaging"

args=$(getopt t: $*)
set -- ${args}

tag=""
for i; do
    case "$i" in
        -t)
           tag="$2"
           shift 2
           ;;
        --)
           shift
           break
           ;;
    esac
done

# Remove everything prior to building
pkgs_to_rm="$(rpm -qa | (egrep '^grid-packaging-tools|^[Gg]lobus-|^myproxy|^gsi_openssh' || true) )"
if [ -n "$pkgs_to_rm" ]; then
    sudo rpm -e --allmatches $pkgs_to_rm
fi

bundles="globus-data-management-server,globus-data-management-client,globus-data-management-sdk,globus-gsi,globus-resource-management-server,globus-resource-management-sdk,globus-resource-management-client,gram5-condor,gram5-lsf,gram5-pbs,gram5-sge,globus-simple-ca"
packages_to_build="myproxy,gsi_openssh"

# this has side-effect of checkout out all source trees
packages="$(./make-packages.pl ${tag:+-t $tag} -a -lp -deps -deporder --order-include-runtime-deps -bundles=$bundles -packages="$packages_to_build" ${tag:+-t "$tag"} | \
    awk "/at version/ { print \$1 \"-\" \$4 }" | grep -Ev "gsi_openssh_setup|authz_null_callout|globus_user_env")"
cvs_packages="gpt-$(cat gpt/gpt_version)
$packages"
echo "$packages" > packages-list.txt

cat > packages.xsl <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    version="1.0">
<xsl:output method="text" encoding="UTF-8" indent="no"/>

<xsl:template match="text()"/>
<xsl:template match="a">
    <xsl:if test="contains(@href, '.tar.gz') and
            substring-after(@href, '.tar.gz') = ''">
        <xsl:value-of select="@href"/>
        <xsl:text>&#10;</xsl:text>
    </xsl:if>
</xsl:template>
</xsl:stylesheet>
EOF

# Create a core in source_output/tmp_core
./make-packages.pl --no-updates -t globus_5_2_branch globus_core -skippackage --skipbundle --flavor=gcc64dbg
repo_packages="$(curl -Ls http://builds.globus.org/repo/packages | xsltproc --html packages.xsl -)"

for package in $cvs_packages; do
    package_tarname="$(echo "$repo_packages" | grep "${package}\(-src\)\{0,1\}.tar.gz" || true)"
    if [ "$package_tarname" = "" ]; then
        package_no_version="${package%%-*}"
        if [ "$package_no_version" = "gpt" ]; then
            cp ${package_tarname} "$WORKSPACE/package-output/"
        else
            GPT_LOCATION="$(pwd)/$(cat gpt/gpt_version)" ./make-packages.pl --packages="$package_no_version" \
                               -skipbundle -no-updates -nogpt -flavor=gcc64dbg
            if [ -f package-output/${package}.tar.gz ]; then
                package_tarname="${package}.tar.gz" 
            elif [ -f package-output/${package}-src.tar.gz ]; then
                package_tarname="${package}-src.tar.gz" 
            else
                echo "Can't find $package"
                false
            fi
            cp "package-output/${package_tarname}" \
                    "$WORKSPACE/package-output/"
        fi
    else
        curl -Ls -o "$WORKSPACE/package-output/$package.tar.gz" "http://builds.globus.org/repo/packages/$package.tar.gz"
    fi
done

# vim: filetype=zsh
