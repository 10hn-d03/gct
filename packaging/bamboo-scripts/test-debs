#! /bin/sh

set -e
umask 022

PATH=$PATH:/usr/sbin:/sbin

bamboodir=$(pwd)/bamboo-scripts
topdir=$(pwd)
tmppath=$(pwd)/tmp
testoutdir=$(pwd)/test-results
chmod a+x make-packages.pl fait_accompli/installer.sh gpt/build_gpt gpt/make_gpt_dist gpt/setup_gpt_dist gpt/packaging_tools/bootstrap gpt/check-gpt-prereqs

flavor='unset'
while getopts "r:a:f:" i; do
    case "$i" in
        r)
            repopkg_url="$OPTARG"
            ;;
        a)
            artifact_url="$OPTARG"
            ;;
        f)
            flavor="$OPTARG"
            ;;
    esac
done
shift $(($OPTIND - 1))

if [ "$repopkg_url" = "" -o "$artifact_url" = "" ]; then
    echo "Usage: $0 -r REPO-PACKAGE-URL -a ARTIFACT-URL" 1>&2
    exit 1
fi

if [ "$flavor" = "unset" ]; then
    arch="$(dpkg-architecture -qDEB_BUILD_GNU_CPU)"
    case "$arch" in
        x86_64|ia64)
            flavor=gcc64
            ;;
        i?86)
            flavor=gcc32
            ;;
        *)
            echo "Don't know how to determine flavor for $arch" 1>&2
            exit 1
            ;;
    esac
fi

mkdir -p $topdir
mkdir -p $testoutdir

# Reset home to this directory as it is a transient bamboo build dir
HOME=$topdir

mkdir -p $tmppath

# Remove all globus-related packages prior to testing
pkgs_to_rm="$( dpkg-query -W -f "\${Package}\t\${Status}\n" "*globus*" "grid-packaging-tools*" "myproxy*" "gsi-openssh*" | awk -F"	" "\$2 ~ /^install/ { print \$1 }" || true)"
if [ -n "$pkgs_to_rm" ]; then
    sudo dpkg -P $pkgs_to_rm
fi

# Download and install the repo definition package
curl -q "$repopkg_url" > "${repopkg_url##*/}"
sudo dpkg -i "${repopkg_url##*/}"

# Create source packages for the tests
./make-packages.pl -a --deps -deporder -bundles=globus-data-management-test \
        -flavor=${flavor} -skipbundle

# Install the binaries that we will test
sudo aptitude -y install $(curl -s "${artifact_url}/all-packages/all-packages" | sed -e /globus-repository/d -e "s/_.*//")

# Set up security if we dont have it done already
if [ ! -f /etc/grid-security/hostcert.pem -o ! -f $HOME/.globus/usercert.pem ]; then
    sudo grid-ca-create -noint -pass globus
    sudo grid-default-ca -ca "$(sudo openssl x509 -noout -hash -in /var/globus_simple_ca/cacert.pem)"
    sudo grid-cert-request -host "$(globus-hostname)" -dir "/etc/grid-security" -force
    sudo grid-ca-sign -in "/etc/grid-security/hostcert_request.pem" -force -out "/etc/grid-security/hostcert.pem" -passin pass:globus
    X509_USER_CERT="$HOME/.globus/usercert.pem"
    X509_USER_KEY="$HOME/.globus/userkey.pem"
    export X509_USER_CERT
    export X509_USER_KEY

    grid-cert-request -cn "$(id -un)" -nopw -force
    sudo grid-ca-sign -in "$HOME/.globus/usercert_request.pem" -out "/tmp/usercert.pem" -passin pass:globus -force
    cp /tmp/usercert.pem "$X509_USER_CERT"
    sudo grid-mapfile-add-entry -dn "$(grid-cert-info -subject -file "$X509_USER_CERT")" -ln "$(id -un)"
    sudo invoke-rc.d globus-gridftp-server restart 
    grid-proxy-init -hours 24
fi

mkdir -p "$tmppath/$flavor"
cd "$tmppath/$flavor"

flavortestoutdir="${testoutdir}/${flavor}"

mkdir -p "${flavortestoutdir}"

for testpkg in $topdir/package-output/globus*_test-*.tar.gz; do
    gzip -dc "$testpkg" | tar xf -
    testpkgname=$( basename $testpkg | sed -e 's/\.tar\.gz//' )
    cd $testpkgname
    testpkgname_no_ver=$(echo $testpkgname | sed -e 's/-.*//' -e 's/_/-/g')
    ./configure --with-flavor=${flavor}
    make 
    make junit || true
    for x in "${testpkgname_no_ver}"*.xml; do
        if [ -f "$x" ]; then
            sed -e "s/<testsuite name=\"\([^\"]*\)\" /<testsuite name=\"\1_${flavor}\" /" -e "s/classname=\"\([^\"]*\)\"/classname=\"\1_${flavor}\"/"< "$x" > "${flavortestoutdir}/${x}"
        fi
    done
    cd ..
done
