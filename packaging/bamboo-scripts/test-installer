#! /bin/sh

set -x
umask 022

PATH=$PATH:/usr/sbin:/sbin

packagingdir="$(pwd)"
coveragedir="${packagingdir}/coverage"
bamboodir=$(pwd)/bamboo-scripts
topdir=$(pwd)
tmppath=$(pwd)/tmp
testoutdir=$(pwd)/test-results
mkdir -p "${coveragedir}"
chmod a+x make-packages.pl fait_accompli/installer.sh gpt/build_gpt gpt/make_gpt_dist gpt/setup_gpt_dist gpt/packaging_tools/bootstrap gpt/check-gpt-prereqs

chroot=""
in_chroot=0
flavors=""
tag=""
profileflags=""
configure_options=""

while getopts "ic:r:f:t:po:" i; do
    case "$i" in
        i)
            in_chroot=1
            ;;
        c)
            chroot="$OPTARG"
            chroot_args="${chroot_args:+"$chroot_args "}-i"
            ;;
        r)
            installer_url="$OPTARG"
            chroot_args="${chroot_args:+"$chroot_args "}-r ${OPTARG}"
            ;;
        f)
            flavors="${flavors:+"${flavors} "}${OPTARG}"
            ;;
        t)
            tag="${OPTARG}"
            chroot_args="${chroot_args:+"$chroot_args "}-t ${OPTARG}"
            ;;
        p)
            profile=1
            profileflags="CFLAGS=--coverage LDFLAGS=--coverage"
            ;;
        o)
            configure_options="$OPTARG"
            ;;
    esac
done
shift $(($OPTIND - 1))

if [ "$installer_url" = "" ]; then
    echo "Usage: $0 -r INSTALLER-URL" 1>&2
    exit 1
fi

mkdir -p $topdir
mkdir -p $testoutdir
mkdir -p $coveragedir

# Reset home to this directory as it is a transient bamboo build dir
HOME=$topdir

mkdir -p $tmppath

# Remove all globus-related packages prior to testing
if test -f /etc/redhat-release; then
    pkgs_to_rm="$( rpm -qa | (egrep '^grid-packaging-tools|^[Gg]lobus-|^myproxy|^gsi-openssh' || true) )"
    if [ -n "$pkgs_to_rm" ]; then
        sudo rpm -e --allmatches $pkgs_to_rm
    fi
    if test -z "${flavors}"; then
        arch="$(uname -m)"
        case "$arch" in
            x86_64|ia64)
                flavors=gcc64
                ;;
            i?86)
                flavor=gcc32
                ;;
            *)
                echo "Don't know how to determine flavor for $arch" 1>&2
                exit 1
                ;;
        esac
    fi
elif test -f /etc/debian_version; then
    pkgs_to_rm="$( dpkg-query -W -f "\${Package}\t\${Status}\n" "*globus*" "grid-packaging-tools*" "myproxy*" "gsi-openssh*" | awk -F"	" "\$2 ~ /^install/ { print \$1 }" || true)"
    if [ -n "$pkgs_to_rm" ]; then
        sudo dpkg -P $pkgs_to_rm
    fi
    if test -z "${flavors}"; then
        arch="$(dpkg-architecture -qDEB_BUILD_GNU_CPU)"
        case "$arch" in
            x86_64|ia64)
                flavors=gcc64
                ;;
            i?86)
                flavors=gcc32
                ;;
            *)
                echo "Don't know how to determine flavor for $arch" 1>&2
                exit 1
                ;;
        esac
    fi
fi

if ! expr "$installer_url" : ".*.tar.gz"; then
    installer_url="$installer_url/gt$(cat fait_accompli/version)-all-source-installer.tar.gz"
fi

installer_file="${installer_url##*/}"
installer_dir="$(pwd)/${installer_file%%.tar.gz}"
source_package_dir="${installer_dir}/source-packages"

# Download the source installer
if [ "$in_chroot" != 1 ]; then
    if [ ! -f "${installer_file}" ]; then
        curl -Os "$installer_url"
    fi

    if [ ! -f "${installer_dir}" ]; then
        tar zxf "${installer_file}"
    fi
fi

# Build the installer
for flavor in ${flavors}; do
    cd "${installer_dir}";
    ./configure --prefix="${topdir}/globus-location-${flavor}" \
                --with-flavor="${flavor}" \
                ${configure_options} ;
    env ${profileflags} make;
    env ${profileflags} make globus_simple_ca;
    env ${profileflags} make install;

    if [ "$in_chroot" != 1 ]; then
        # some of the extra packages or patch-and-build packages don't have
        # working make dist rules, hence -k ||true
        env ${profileflags} make -k dist || true;
    fi

    make distclean
    cd -
done

if [ "$chroot" != "" ]; then
    schroot -c "$chroot" -d "$packagingdir" -p -- bash $0 $chroot_args
fi

export GLOBUS_LOCATION="${topdir}/globus-location-${flavor}"
. ${GLOBUS_LOCATION}/etc/globus-user-env.sh

SIMPLE_CA_DIR="${topdir}/bamboo-simple_ca"

# Check to see if there's a simpleCA available in $SIMPLE_CA_DIR
if [ ! -d "$SIMPLE_CA_DIR" ]; then
    grid-ca-create -force -noint -pass globus -dir "$SIMPLE_CA_DIR"
    cd "$SIMPLE_CA_DIR"
    grid-ca-package -cadir "$SIMPLE_CA_DIR"
    cd "$OLDPWD"
fi

SIMPLE_CA_HASH="$(grid-cert-info -issuerhash -f "$SIMPLE_CA_DIR"/cacert.pem)"
SIMPLE_CA_PACKAGE="$(ls -1 "$SIMPLE_CA_DIR"/globus_simple_ca_${SIMPLE_CA_HASH}.tar.gz)"

sudo mkdir -p /etc/grid-security/certificates
gzip -dc < "$SIMPLE_CA_PACKAGE" | sudo tar -C /etc/grid-security/certificates --strip 1 -xf -

remove_default_ca="no"
if [ ! -r /etc/grid-security/grid-security.conf ]; then
    sudo -E /bin/sh -c ". ${GLOBUS_LOCATION}/etc/globus-user-env.sh ; grid-default-ca -ca $SIMPLE_CA_HASH"
    remove_default_ca="yes"
fi

TEST_CRED_DIR="${topdir}/testcreds"
TEST_HOST_CERT="$TEST_CRED_DIR/hostcert.pem"
TEST_HOST_CERTREQ="$TEST_CRED_DIR/hostcert_request.pem"
TEST_HOST_KEY="$TEST_CRED_DIR/hostkey.pem"

TEST_USER_CERT="$TEST_CRED_DIR/usercert.pem"
TEST_USER_CERTREQ="$TEST_CRED_DIR/usercert_request.pem"
TEST_USER_KEY="$TEST_CRED_DIR/userkey.pem"

if [ ! -f "$TEST_HOST_CERT" ]; then
    grid-cert-request -host "$(hostname -f)" -dir "$TEST_CRED_DIR" -ca "$SIMPLE_CA_HASH"
    grid-ca-sign -dir "$SIMPLE_CA_DIR" -in "$TEST_HOST_CERTREQ" -out "$TEST_HOST_CERT" -passin pass:globus -force
fi

if [ ! -f "$TEST_USER_CERT" ]; then
    grid-cert-request -cn "$(id -un)" -dir "$TEST_CRED_DIR" -ca "$SIMPLE_CA_HASH" -nopw -force
    grid-ca-sign -dir "$SIMPLE_CA_DIR" -in "$TEST_USER_CERTREQ" -out "$TEST_USER_CERT" -passin pass:globus -force
fi

remove_host_creds="no"
if [ ! -f "/etc/grid-security/hostcert.pem" ]; then
    sudo cp "$TEST_HOST_CERT" /etc/grid-security/
    sudo cp "$TEST_HOST_KEY" /etc/grid-security/
    remove_host_creds="yes"
fi

X509_USER_CERT="$TEST_USER_CERT"
X509_USER_KEY="$TEST_USER_KEY"
export X509_USER_CERT
export X509_USER_KEY

USER_DN="$(grid-cert-info -s -f "$X509_USER_CERT")"
USER_LN="$(id -un)"
sudo -E /bin/sh -c ". ${GLOBUS_LOCATION}/etc/globus-user-env.sh ; grid-mapfile-add-entry -dn \"$USER_DN\" -ln $USER_LN"


grid-proxy-init -hours 24

for flavor in $flavors; do
    GLOBUS_LOCATION="${topdir}/globus-location-${flavor}"
    . ${GLOBUS_LOCATION}/etc/globus-user-env.sh
sudo -E /bin/sh -c ". ${GLOBUS_LOCATION}/etc/globus-user-env.sh; ${GLOBUS_LOCATION}/etc/init.d/globus-gridftp-server restart "

    mkdir -p "$tmppath/$flavor"
    cd "$tmppath/$flavor"

    flavortestoutdir="${testoutdir}/${flavor}"

    mkdir -p "${flavortestoutdir}"

    for testpkg in $source_package_dir/globus*_test-*.tar.gz; do
        if [ "$profile" = 1 ]; then
            lcov -z -d "${installer_dir}" || true
        fi

        gzip -dc "$testpkg" | tar xf -
        testpkgname=$( basename $testpkg | sed -e 's/\.tar\.gz//' )
        cd $testpkgname
        testpkgname_no_ver=$(echo $testpkgname | sed -e 's/-.*//' -e 's/_/-/g')
        testprofname="$(echo $testpkgname | sed -e 's/-.*//')_${flavor}"

        env ${profileflags} ./configure --with-flavor=${flavor}
        env ${profileflags} make 
        env ${profileflags} make junit || true
        for x in "${testpkgname_no_ver}"*.xml; do
            if [ -f "$x" ]; then
                sed -e "s/<testsuite name=\"\([^\"]*\)\" /<testsuite name=\"\1_${flavor}\" /" -e "s/classname=\"\([^\"]*\)\"/classname=\"\1_${flavor}\"/"< "$x" > "${flavortestoutdir}/${x}"
            fi
        done
        if [ "$profile" = 1 ]; then
            lcov -c -d "${installer_dir}" -t "$testprofname" -o "${coveragedir}/${testprofname}.info" || true
        fi
        cd ..
    done
done

if [ "$profile" = 1 ]; then
    for prof in "${coveragedir}"/*.info; do
        lcov -r "$prof" "*bison*" -o "${prof}.fixed" || true
    done
    cd "${coveragedir}"
    mkdir -p report
    genhtml -o report --show-details --legend \
        --title "Tests for $(cat "$packagingdir/fait_accompli/version")" lcov/*.fixed || true
fi
sudo -E /bin/sh -c ". ${GLOBUS_LOCATION}/etc/globus-user-env.sh ; grid-mapfile-delete-entry -dn \"$USER_DN\" -ln \"$USER_LN\""

for flavor in $flavors; do
    GLOBUS_LOCATION="${topdir}/globus-location-${flavor}"
    sudo chown -R bamboo "$GLOBUS_LOCATION"
done
sudo chown -R bamboo "$installer_dir"

if [ "$remove_host_creds" = "yes" ]; then
    sudo rm -f /etc/grid-security/hostcert.pem /etc/grid-security/hostkey.pem
fi

if [ "$remove_default_ca" = "yes" ]; then
    sudo rm -f /etc/grid-security/globus-host-ssl.conf /etc/grid-security/globus-user-ssl.conf /etc/grid-security/grid-security.conf
fi
