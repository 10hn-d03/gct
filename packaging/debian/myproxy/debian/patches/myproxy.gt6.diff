--- a/Makefile.am
+++ b/Makefile.am
@@ -1,11 +1,5 @@
 ## Process this file with automake to produce Makefile.in
-
-include $(top_srcdir)/globus_automake_pre
-include $(top_srcdir)/globus_automake_pre_top
-
 SUBDIRS= \
-	pkgdata \
-	doxygen \
 	web \
 	systemd \
 	man
@@ -83,7 +77,7 @@
 
 sbin_SCRIPTS = $(Scripts)
 
-flavorinclude_HEADERS= \
+include_HEADERS= \
 	myproxy.h \
 	myproxy_constants.h \
 	myproxy_authorization.h \
@@ -97,15 +91,16 @@
 	myproxy_server.h \
 	verror.h
 
-INCLUDES = $(GPT_INCLUDES)
+AM_CPPFLAGS = $(GLOBUS_CFLAGS)
+LDADD = $(GLOBUS_LIBS)
 
-lib_LTLIBRARIES = libmyproxy_$(GLOBUS_FLAVOR_NAME).la
+lib_LTLIBRARIES = libmyproxy$(_GLOBUS_FLAVOR_NAME).la
 
 libmyproxy___GLOBUS_FLAVOR_NAME__la_SOURCES = $(LibSources)
 
 libmyproxy___GLOBUS_FLAVOR_NAME__la_LDFLAGS = $(GPT_LDFLAGS)
 
-libmyproxy___GLOBUS_FLAVOR_NAME__la_LIBADD = $(GPT_LIB_LINKS)
+libmyproxy___GLOBUS_FLAVOR_NAME__la_LIBADD = $(GLOBUS_LIBS)
 
 bin_PROGRAMS= \
 	myproxy-init \
@@ -128,78 +123,78 @@
 
 myproxy_init_LDFLAGS = $(GPT_LDFLAGS)
 
-myproxy_init_LDADD = ./libmyproxy_$(GLOBUS_FLAVOR_NAME).la $(GPT_PGM_LINKS)
+myproxy_init_LDADD = ./libmyproxy$(_GLOBUS_FLAVOR_NAME).la
 
 myproxy_info_SOURCES = 	myproxy_info.c
 
 myproxy_info_LDFLAGS = $(GPT_LDFLAGS)
 
-myproxy_info_LDADD = ./libmyproxy_$(GLOBUS_FLAVOR_NAME).la $(GPT_PGM_LINKS)
+myproxy_info_LDADD = ./libmyproxy$(_GLOBUS_FLAVOR_NAME).la
 
 myproxy_store_SOURCES = myproxy_store.c
 
 myproxy_store_LDFLAGS = $(GPT_LDFLAGS)
 
-myproxy_store_LDADD = ./libmyproxy_$(GLOBUS_FLAVOR_NAME).la $(GPT_PGM_LINKS)
+myproxy_store_LDADD = ./libmyproxy$(_GLOBUS_FLAVOR_NAME).la
 
 myproxy_retrieve_SOURCES = myproxy_get_credential.c
 
 myproxy_retrieve_LDFLAGS = $(GPT_LDFLAGS)
 
-myproxy_retrieve_LDADD = ./libmyproxy_$(GLOBUS_FLAVOR_NAME).la $(GPT_PGM_LINKS)
+myproxy_retrieve_LDADD = ./libmyproxy$(_GLOBUS_FLAVOR_NAME).la
 
 myproxy_destroy_SOURCES = myproxy_destroy.c
 
 myproxy_destroy_LDFLAGS = $(GPT_LDFLAGS)
 
-myproxy_destroy_LDADD = ./libmyproxy_$(GLOBUS_FLAVOR_NAME).la $(GPT_PGM_LINKS)
+myproxy_destroy_LDADD = ./libmyproxy$(_GLOBUS_FLAVOR_NAME).la
 
 myproxy_server_SOURCES = myproxy_server.c myproxy_usage.c
 myproxy_server_LDFLAGS = $(GPT_LDFLAGS)
 
-myproxy_server_LDADD = ./libmyproxy_$(GLOBUS_FLAVOR_NAME).la $(GPT_PGM_LINKS)
+myproxy_server_LDADD = ./libmyproxy$(_GLOBUS_FLAVOR_NAME).la
 
 myproxy_get_trustroots_SOURCES = myproxy_get_trustroots.c
 
 myproxy_get_trustroots_LDFLAGS = $(GPT_LDFLAGS)
 
-myproxy_get_trustroots_LDADD = ./libmyproxy_$(GLOBUS_FLAVOR_NAME).la $(GPT_PGM_LINKS)
+myproxy_get_trustroots_LDADD = ./libmyproxy$(_GLOBUS_FLAVOR_NAME).la
 
 myproxy_get_delegation_SOURCES = myproxy_get_delegation.c
 
 myproxy_get_delegation_LDFLAGS = $(GPT_LDFLAGS)
 
-myproxy_get_delegation_LDADD = ./libmyproxy_$(GLOBUS_FLAVOR_NAME).la $(GPT_PGM_LINKS)
+myproxy_get_delegation_LDADD = ./libmyproxy$(_GLOBUS_FLAVOR_NAME).la
 
 myproxy_logon_SOURCES = myproxy_get_delegation.c
 
 myproxy_logon_LDFLAGS = $(GPT_LDFLAGS)
 
-myproxy_logon_LDADD = ./libmyproxy_$(GLOBUS_FLAVOR_NAME).la $(GPT_PGM_LINKS)
+myproxy_logon_LDADD = ./libmyproxy$(_GLOBUS_FLAVOR_NAME).la
 
 myproxy_change_pass_phrase_SOURCES = myproxy_cp.c
 
 myproxy_change_pass_phrase_LDFLAGS = $(GPT_LDFLAGS)
 
-myproxy_change_pass_phrase_LDADD = ./libmyproxy_$(GLOBUS_FLAVOR_NAME).la $(GPT_PGM_LINKS)
+myproxy_change_pass_phrase_LDADD = ./libmyproxy$(_GLOBUS_FLAVOR_NAME).la
 
 myproxy_admin_query_SOURCES = myproxy_arq.c
 
 myproxy_admin_query_LDFLAGS = $(GPT_LDFLAGS)
 
-myproxy_admin_query_LDADD = ./libmyproxy_$(GLOBUS_FLAVOR_NAME).la $(GPT_PGM_LINKS)
+myproxy_admin_query_LDADD = ./libmyproxy$(_GLOBUS_FLAVOR_NAME).la
 
 myproxy_admin_load_credential_SOURCES = myproxy_alcf.c
 
 myproxy_admin_load_credential_LDFLAGS = $(GPT_LDFLAGS)
 
-myproxy_admin_load_credential_LDADD = ./libmyproxy_$(GLOBUS_FLAVOR_NAME).la $(GPT_PGM_LINKS)
+myproxy_admin_load_credential_LDADD = ./libmyproxy$(_GLOBUS_FLAVOR_NAME).la
 
 myproxy_admin_change_pass_SOURCES = myproxy_acp.c
 
 myproxy_admin_change_pass_LDFLAGS = $(GPT_LDFLAGS)
 
-myproxy_admin_change_pass_LDADD = ./libmyproxy_$(GLOBUS_FLAVOR_NAME).la $(GPT_PGM_LINKS)
+myproxy_admin_change_pass_LDADD = ./libmyproxy$(_GLOBUS_FLAVOR_NAME).la
 
 pkgdata_DATA = README INSTALL myproxy-server.config \
                LICENSE LICENSE.sasl LICENSE.netbsd LICENSE.pidfile \
@@ -231,25 +226,13 @@
 myproxy-admin-addservice: myproxy-admin-adduser
 	$(LN_S) myproxy-admin-adduser myproxy-admin-addservice
 
-dirt.sh:
-	touch dirt.sh
-
-config.h:
-	touch config.h
-
 KRB5CPPFLAGS = @KRB5CPPFLAGS@
 
-gssapi.lo: gssapi.c plugin_common.h config.h
-	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(KRB5CPPFLAGS) $(CFLAGS) -c gssapi.c
-
-plugin_common.lo: plugin_common.c plugin_common.h config.h
-	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(KRB5CPPFLAGS) $(CFLAGS) -c plugin_common.c
+gssapi.lo: gssapi.c plugin_common.h
+plugin_common.lo: plugin_common.c plugin_common.h
 
 splint:
 	splint +posixlib \
 	-Dsocklen_t=int -Din_addr_t=int \
 	-Du_int="unsigned int" -Du_char="unsigned char" \
 	$(DEFS) $(GPT_INCLUDES) *.c
-
-include $(top_srcdir)/globus_automake_post
-include $(top_srcdir)/globus_automake_post_top
--- a/configure.in
+++ b/configure.in
@@ -1,17 +1,23 @@
 dnl Process this file with autoconf to produce a configure script.
 
 AC_REVISION($Revision: 1.75 $)
-AC_INIT(Makefile.am)
+AC_INIT([myproxy],[5.9])
+AM_INIT_AUTOMAKE([foreign])
+LT_INIT([dlopen win32-dll])
 
-GLOBUS_INIT
-
-AM_PROG_LIBTOOL
 AC_PROG_LN_S
 
-dnl config header goes here
-
-dnl Initialize the automake rules the last argument
-AM_INIT_AUTOMAKE($GPT_NAME, $GPT_VERSION)
+AC_ARG_WITH([flavor],
+    AS_HELP_STRING([--with-flavor=FLAVOR], [Build with Globus Flavor]),
+    [
+    GLOBUS_FLAVOR_NAME="$withval"
+    _GLOBUS_FLAVOR_NAME="_$withval"
+    ],
+    [GLOBUS_FLAVOR_NAME=""
+    _GLOBUS_FLAVOR_NAME=""
+    ])
+AC_SUBST(GLOBUS_FLAVOR_NAME)
+AC_SUBST(_GLOBUS_FLAVOR_NAME)
 
 dnl
 dnl Figure out which regular expression parser to use.
@@ -65,7 +71,12 @@
 dnl
 dnl Check for socklen_t
 dnl
-AC_CHECK_TYPES(socklen_t)
+AC_CHECK_HEADERS([sys/socket.h])
+
+AC_CHECK_TYPES([socklen_t],[],[],AC_INCLUDES_DEFAULT[
+#if HAVE_SYS_SOCKET_H
+#include <sys/socket.h>
+#endif])
 dnl
 dnl Check for facilitynames
 dnl
@@ -89,7 +100,7 @@
 dnl
 dnl The following tests need/use GPT_LIBS
 dnl
-LIBS="$GPT_LIBS $LIBS"
+PKG_CHECK_MODULES([GLOBUS], [globus-gss-assist >= 3, globus-usage >= 3, globus-gss-assist >= 3, globus-gssapi-gsi >= 4, globus-common >= 0, globus-gsi-sysconfig >= 0], [], [AC_MSG_WARN([GLOBUS_PKG_ERRORS])])
 dnl
 dnl Check for libcrypto
 dnl
@@ -126,7 +137,7 @@
 dnl Check for SASL
 dnl
 AC_ARG_WITH(sasl2,
-	[ --with-sasl2=PATH        Build with SASL V2 support],
+    AS_HELP_STRING([--with-sasl2=PATH], [Build with SASL V2 support]),
 	[
 		if test "x$withval" = "xyes" ; then
 		   AC_MSG_ERROR([--with-sasl2 requires PATH argument])
@@ -155,7 +166,7 @@
 dnl Check for Kerberos
 dnl
 AC_ARG_WITH(kerberos5,
-       [ --with-kerberos5=PATH    Build with Kerberos V5 support],
+    AS_HELP_STRING([--with-kerberos5=PATH],[Build with Kerberos V5 support]),
        [
                if test "x$withval" = "xyes" ; then
                   AC_MSG_ERROR([--with-kerberos5 requires PATH argument])
@@ -194,7 +205,7 @@
 dnl
 
 AC_ARG_WITH(openldap,
-       [ --with-openldap=PATH    Build with OpenLDAP CA support],
+    AS_HELP_STRING([--with-openldap=PATH],[Build with OpenLDAP CA support]),
        [
                if test "x$withval" = "xyes" ; then
                   AC_MSG_ERROR([--with-openldap requires PATH argument])
@@ -236,7 +247,7 @@
 dnl
 
 AC_ARG_WITH(voms,
-	[ --with-voms=PATH	Build with VOMS support],
+    AS_HELP_STRING([--with-voms=PATH],[Build with VOMS support]),
 	[
 		if test "x$withval" = "xyes" ; then
 		   AC_MSG_ERROR([--with-voms requires PATH argument])
@@ -253,25 +264,9 @@
 	]
 )
 
-LAC_DOXYGEN([" ../ "])
-
-GLOBUS_FINALIZE
-
-AC_OUTPUT(
-	pkgdata/Makefile
-	pkgdata/pkg_data_src.gpt
+AC_CONFIG_FILES([
 	Makefile
-	doxygen/Makefile
-	doxygen/Doxyfile
-	doxygen/Doxyfile-internal
 	web/Makefile
 	systemd/Makefile
-	man/Makefile
-	,
-	$GPT_LOCATION/sbin/gpt_generate_bin_pkg_data \
-	--flavor=$GLOBUS_FLAVOR_NAME "./pkgdata/pkg_data_src.gpt"
-	,
-	GLOBUS_FLAVOR_NAME=$GLOBUS_FLAVOR_NAME
-	GLOBUS_LOCATION=$GLOBUS_LOCATION
-	GPT_LOCATION=$GPT_LOCATION
-)
+	man/Makefile])
+AC_OUTPUT
