    ################# BEGIN    Inserted by configure #############

GLOBUS_DEPLOY_PATH=                # This line is overwritten during deployment
GLOBUS_DEPLOYED='FALSE'            # This line is overwritten during deployment

if [ -n "${GSI_INSTALL_PATH}" -a -z "${GLOBUS_INSTALL_PATH}" ]; then
    GLOBUS_INSTALL_PATH=${GSI_INSTALL_PATH}
fi

if [ -n "${GSI_DEPLOY_PATH}" -a -z "${GLOBUS_DEPLOY_PATH}" ]; then
    GLOBUS_DEPLOY_PATH=${GSI_DEPLOY_PATH}
fi

if [ "X${GLOBUS_DEPLOYED}" = "XTRUE" ]; then
    if [ -z "${GLOBUS_DEPLOY_PATH}" ]; then
	echo "ERROR: environment variable GLOBUS_DEPLOY_PATH not defined"  1>&2
	exit 1
    fi
    if [ -z "${GLOBUS_INSTALL_PATH}" ]; then
	if [ ! -r "${GLOBUS_DEPLOY_PATH}/etc/globus-install-path.sh" ]; then
	    echo "ERROR: cannot read ${GLOBUS_DEPLOY_PATH}/etc/globus-install-path.sh" 1>&2
	    exit 1
	fi
	. "${GLOBUS_DEPLOY_PATH}/etc/globus-install-path.sh"
	if [ -z "${GLOBUS_INSTALL_PATH}" ]; then
	    echo "ERROR: environment variable GLOBUS_INSTALL_PATH not defined"  1>&2
	    echo "in ${GLOBUS_DEPLOY_PATH}/etc/globus-install-path.sh"         1>&2
	    exit 1
	fi
    fi
else 
    if [ -z "${GLOBUS_INSTALL_PATH}" ]; then
	echo "ERROR: environment variable GLOBUS_INSTALL_PATH not defined"  1>&2
	# for easier development testing, fall back on ${prefix} and don't exit
	# GLOBUS_INSTALL_PATH=@prefix@
	exit 1
    fi
fi

if [ "X${GLOBUS_DEPLOYED}" = "XTRUE" ]; then
    export GLOBUS_DEPLOY_PATH
    prefix=${GLOBUS_DEPLOY_PATH}
    exec_prefix=${GLOBUS_DEPLOY_PATH}
else
    prefix="${GLOBUS_INSTALL_PATH}"
    exec_prefix=@installed_exec_prefix@
    if [ "X${GLOBUS_ARCH_INDEPENDENT}" = "X" ] &&
       [ '@installed_exec_prefix@' != '${prefix}' ] ; then
       exec_prefix="${GLOBUS_INSTALL_PATH}/services/`${GLOBUS_INSTALL_PATH}/sbin/config.guess`"
    fi
fi

export GLOBUS_INSTALL_PATH
sbindir=${exec_prefix}/sbin
bindir=${exec_prefix}/bin
libdir=${exec_prefix}/lib
libexecdir=${exec_prefix}/libexec
includedir=${exec_prefix}/include
datadir=${prefix}/share
sysconfdir=${prefix}/etc
sharedstatedir=${prefix}/com
localstatedir=${prefix}/var
tmpdir=@tmpdir@
local_tmpdir=@local_tmpdir@
secure_tmpdir=@secure_tmpdir@

if [ -z "${GLOBUS_SSL_PATH}" ]; then
    if [ ! -r "${exec_prefix}/etc/globus-ssl-path.sh" ]; then
	echo "ERROR: cannot read ${exec_prefix}/etc/globus-ssl-path.sh" 1>&2
	exit 1
    fi
    . "${exec_prefix}/etc/globus-ssl-path.sh"
    if [ -z "${GLOBUS_SSL_PATH}" ]; then
	echo "ERROR: environment variable GLOBUS_SSL_PATH not defined"  1>&2
	echo "in ${exec_prefix}/etc/globus-ssl-path.sh"         1>&2
	exit 1
    fi
fi
if [ -z "$GLOBUS_SH_VARIABLES_SET" ]; then
    if [ ! -r ${exec_prefix}/etc/globus-sh-commands.sh ] ; then
	echo "ERROR: cannot read ${exec_prefix}/etc/globus-sh-commands.sh" 1>&2
	exit 1
    fi
    . ${exec_prefix}/etc/globus-sh-commands.sh
    for _var in `${GLOBUS_SH_SED} -n '/^GLOBUS_SH/s/=.*$//p' \
	${exec_prefix}/etc/globus-sh-commands.sh`
    do
	export ${_var}
    done
    GLOBUS_SH_VARIABLES_SET="Y"
    export GLOBUS_SH_VARIABLES_SET
fi


globus_source () {

  # Check if file exists and source it
  if [ ! -f "$1" ] ; then
     ${GLOBUS_SH_PRINTF-printf} "$1 not found.\n" >&2
     exit 1
  fi

  . "$1"
}


################# END    Inserted by configure #############
